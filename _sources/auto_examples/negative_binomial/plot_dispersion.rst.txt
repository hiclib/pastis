
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/negative_binomial/plot_dispersion.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_negative_binomial_plot_dispersion.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_negative_binomial_plot_dispersion.py:


=========================
Estimating the dispersion
=========================

Are Hi-C contact count data overdispersed?

.. GENERATED FROM PYTHON SOURCE LINES 8-16

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    from iced import datasets
    import iced
    from pastis import dispersion









.. GENERATED FROM PYTHON SOURCE LINES 17-18

Load a Yeast dataset, and a human dataset

.. GENERATED FROM PYTHON SOURCE LINES 18-21

.. code-block:: default


    counts, lengths = datasets.load_sample_yeast()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/share/miniconda3/envs/pastis/lib/python3.9/site-packages/iced/io/_io_pandas.py:56: UserWarning: Attempting to guess whether counts are 0 or 1 based
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 22-24

Normalize the contact count data, but keep the biases to estimate the
dispersion

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: default


    counts = iced.filter.filter_low_counts(counts, percentage=0.06)
    normed_counts, biases = iced.normalization.ICE_normalization(
        counts,
        output_bias=True)








.. GENERATED FROM PYTHON SOURCE LINES 31-35

Now, estimate the variance and mean for every genomic distance

Note that in order to have an unbiased estimation of the variance, you need
to provide the bias vector.

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default


    _, mean, variance, _ = dispersion.compute_mean_variance(
        counts, lengths, bias=biases)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

And now plot the resulting mean versus variance

.. GENERATED FROM PYTHON SOURCE LINES 41-66

.. code-block:: default

    fig, ax = plt.subplots()
    s = ax.scatter(mean, variance, linewidth=0, marker="o",
                   s=20)

    ax.set_xscale("log")
    ax.set_yscale("log")
    ax.set_xlabel("Mean", fontweight="bold")
    ax.set_ylabel("Variance", fontweight="bold")
    xmin, xmax = ax.get_xlim()
    ymin, ymax = ax.get_ylim()

    ax.plot(np.arange(1e-1, 1e7, 1e6),
            np.arange(1e-1, 1e7, 1e6),
            linewidth=1,
            linestyle="--", color=(0, 0, 0))

    ax.spines['right'].set_color('none')
    ax.spines['top'].set_color('none')
    ax.xaxis.set_ticks_position('bottom')
    ax.yaxis.set_ticks_position('left')
    ax.set_ylim((min(ymin, xmin), max(xmax, ymax)))
    ax.set_xlim((min(ymin, xmin), max(xmax, ymax)))
    ax.set_title("Are contat counts overdispersed?", fontweight="bold")

    ax.grid("off")



.. image:: /auto_examples/negative_binomial/images/sphx_glr_plot_dispersion_001.png
    :alt: Are contat counts overdispersed?
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.558 seconds)


.. _sphx_glr_download_auto_examples_negative_binomial_plot_dispersion.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/hiclib/pastis/gh-pages?urlpath=lab/tree/notebooks/auto_examples/negative_binomial/plot_dispersion.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_dispersion.py <plot_dispersion.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_dispersion.ipynb <plot_dispersion.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
